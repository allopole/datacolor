% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AUColors.R
\name{AUColors}
\alias{AUColors}
\title{A diverging color palette for AUC (Area Under ROC Curve).}
\usage{
AUColors(n = 10, invert = FALSE, reverse = FALSE)
}
\arguments{
\item{n}{Number of levels in palette (number of bins).  Default: \code{n = 10}. Given error of \code{~0.5},
\code{n = 10} is recommended. For a higher precision, use \code{n = 20}. If \code{n} is odd, the central bin
(encompassing the central value) will be a shade of grey.}

\item{invert}{If \code{invert = TRUE} palette edges will be dark, and center will be light. Else,
center is dark and edges are light.}

\item{reverse}{If \code{reverse = TRUE} left side colors (more negative values) will be blue and right
side colors will be yellow. Else, left (more negative) is yellow and right (more positive) is
blue.}
}
\value{
character vector. A vector of RGB colors specified as hex color codes (#RRGGBB).
}
\description{
This function returns a palette suitable for a heatmap of AUC (area under the ROC or Receiver
Operating Characteristic). The palette is appropriate for any scale with equal positive and
negative ranges above and below a central value.  For AUC, the central value is 0.5, and the min
and max are 0. and 1.  More positive values map to bluer colors, more negative values map to
yellower colors.
}
\details{
Palette characteristics:
\itemize{
\item color-blind-safe (under three most common forms of colorblindness)
\item perceptually linear
\item equal brightness gradients on both sides of central value
\item constant hue and chroma on either side of central value
\item Dark value for no correlation (near 0.5); bright values for high correlation (near 1 and 0)
\item Blue for positive correlation (1); orange for negative correlation (0)
\item NOT suitable for b/w printing, as low and high values are not distinguishable in greyscale
}
}
\examples{
p <- AUColors()
p
colorbar(p)

# Sample AUC Heat Map
randommatrix <- matrix(runif(12*6),ncol=6)
nlevels <- 10
lattice::levelplot(randommatrix,
  at = seq(0,1,1/nlevels), # number of breaks
  col.regions = AUColors(), # color map
  aspect = "iso")

## inverted and reversed, with grey center bin:
p <- AUColors(n=21,invert=TRUE,reverse=TRUE)
colorbar(p)
}
