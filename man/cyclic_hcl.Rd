% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cyclic_hcl.R
\name{cyclic_hcl}
\alias{cyclic_hcl}
\title{Cyclic HCL Color Palettes}
\usage{
cyclic_hcl(n.cycles = 10, cycle.lenth = 100, h = c(0, -100), c = 100,
  l = 100, cycle.h = 0, cycle.c = 50, cycle.l = c(75, 25), alpha = 1,
  h.power = 1, c.power = 1, l.power = 1, cycle.h.power = 1,
  cycle.c.power = 1, cycle.l.power = 0.5, terminate = TRUE,
  cycle.right = TRUE, stepped = FALSE, fixup = FALSE)
}
\arguments{
\item{n.cycles}{Numeric. Number of cycles, or bins. Default: \code{10}}

\item{cycle.lenth}{Integer. Number of colors per cycle or bin. Default: \code{100}}

\item{h}{Numeric. Hue (0 to 360); constant or 2-vector giving palette endpoints. Default:
\code{c(0,-100)}}

\item{c}{Numeric. Chroma (0 to ~100); constant or 2-vector giving palette endpoints. Default:
\code{100}}

\item{l}{Numeric. Lightness (0 to ~100); constant or 2-vector giving palette endpoints. Default:
\code{100}}

\item{cycle.h}{Numeric. Hue offset (0 to 360); constant or 2-vector giving cycle endpoints.
Default: \code{0}}

\item{cycle.c}{Numeric. Chroma; constant or 2-vector giving cycle endpoints. Default: \code{c(50,50)}}

\item{cycle.l}{Numeric. Lightness; constant or 2-vector giving cycle endpoints. Default:
\code{c(75,25)}}

\item{alpha}{Numeric. Opacity; constant. Default: \code{1}. (Note: \code{alpha} applies to enire palette
for now. In future releases, alpha cycling will be allowed.)}

\item{h.power}{Numeric. Default: \code{1}}

\item{c.power}{Numeric. Default: \code{1}}

\item{l.power}{Numeric. Default: \code{1}}

\item{cycle.h.power}{Numeric. Default: \code{1}}

\item{cycle.c.power}{Numeric. Default: \code{1}}

\item{cycle.l.power}{Numeric. Default: \code{0.5}}

\item{terminate}{Logical. If TRUE the palette is closed (left and right closed) by
adding a single color at either the left or right end . If right = TRUE, then terminate = TRUE
adds a color before the first cycle. If right = FALSE, then terminate = TRUE adds a color after
the last cycle. If \code{terminate=FALSE} the palette remains open at one end. Default: \code{TRUE}}

\item{cycle.right}{Logical. If \code{cycle.right=TRUE}, the cycles are considered right-closed (left
open) intervals. This only has a practical effect if \code{terminate = TRUE}. Default: \code{TRUE}.}

\item{stepped}{Logical. Not used. Default: \code{FALSE}. Future releases will allow for stepped vs
cyclic transitions.}

\item{fixup}{Logical. Out-of-gammut colors are converted to valid RGB colors if \code{fixup=TRUE}, and
\code{NA} strings if \code{fixup=FALSE}. Default: \code{FALSE}.}
}
\value{
Character vector. A vector of RGB colors specified as hex color codes (#RRGGBB).
}
\description{
Depricated - this function has been replaced with helper functions
}
\details{
\code{cyclic_hcl()} constructs palettes combining end-to-end linear interpolation with cycles in hue
(H), lightness (L) and or chroma (C).

Palette characteristics:
\itemize{
\item perceptually linear H, C and L gradients
\item Stepped H, C and/or L, with perceptually linear gradients within each step
\item Good for data that combines cyclic and continuous aspects (like seasonal data), or for
increased visual differentiation among levels.
}
}
\examples{
## Palette with linear hue, cyclical lightness, constant chroma.
palette.linH.cycL  <- cyclic_hcl()
colorbar(palette.linH.cycL)

}
